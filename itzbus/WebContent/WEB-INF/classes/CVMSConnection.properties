# # #
#
# Connection.properties
#
# # #

#
# The lower bound of the pool, the minimum size of the pool
# This is the size when the server gets up.
# 
POOL_LOWER_BOUND=20

#
# The upper bound of the pool, the maximum size of the pool
# This is the size upto which the pool will grow.
# So, whenever the server needs a connection and connection is 
# not available, and pool size is less than this, it will 
# create a new connection and will add it to the connection pool
# .. If pool size is over, and more connection is needed, than
# the decision is taken from the ALLOCATE_IF_EXCEED parameter
# 
POOL_UPPER_BOUND=500

#
# Indicates whether to create a new connection if the pool size
# is already reached to its upper bound and there is no connection
# free. If false, null will be returned,
# 
ALLOCATE_IF_EXCEED=true

# 
# Indicates whether to create the pool in the thread or not.
# If true, the pool is created in separate thread, so that
# we can connect to the rmi server just after the server gets
# start, and atleast one connection is made.
# If false, the server will create a pool of Lower Bound, and
# until it creates that pool, no one can connect to the rmi
# server
#
POOL_IN_THREAD=false

#
# At what interval (in minute) the server should detect for 
# closed connections and remove them.
# 0 or -ve means never.
#
DETECT_CLOSED_CONNECTION_TIME=0

#
# Count of consecutive errors, after which the connection will
# be considered as closed.
# If the value is 0, the default is taken to 5. i.e. 0 will never used.
# If the value is -ve, the connection will never be considered
# as closed on infinite errors, but if actual connection
# breaks down, or the database gives error, or the connection 
# is actually closed, it will be considered as closed.
#
ERROR_COUNT_FOR_CLOSED=5

